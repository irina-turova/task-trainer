package apache.cayenne.mappings.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import apache.cayenne.mappings.Task;
import apache.cayenne.mappings.Theme;

/**
 * Class _Subtheme was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Subtheme extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String PRIMARY_KEY_PK_COLUMN = "primaryKey";

    public static final Property<String> DESCRIPTION = Property.create("description", String.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<Integer> THEME = Property.create("theme", Integer.class);
    public static final Property<List<Task>> TASKS = Property.create("tasks", List.class);
    public static final Property<Theme> THEME1 = Property.create("theme1", Theme.class);

    public void setDescription(String description) {
        writeProperty("description", description);
    }
    public String getDescription() {
        return (String)readProperty("description");
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setTheme(Integer theme) {
        writeProperty("theme", theme);
    }
    public Integer getTheme() {
        return (Integer)readProperty("theme");
    }

    public void addToTasks(Task obj) {
        addToManyTarget("tasks", obj, true);
    }
    public void removeFromTasks(Task obj) {
        removeToManyTarget("tasks", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Task> getTasks() {
        return (List<Task>)readProperty("tasks");
    }


    public void setTheme1(Theme theme1) {
        setToOneTarget("theme1", theme1, true);
    }

    public Theme getTheme1() {
        return (Theme)readProperty("theme1");
    }


}
