package apache.cayenne.mappings.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import apache.cayenne.mappings.Difficulty;
import apache.cayenne.mappings.Image;
import apache.cayenne.mappings.Solution;
import apache.cayenne.mappings.Subtheme;
import apache.cayenne.mappings.User;

/**
 * Class _Task was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Task extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String PRIMARY_KEY_PK_COLUMN = "primaryKey";

    public static final Property<Integer> ANSWER_IMAGE = Property.create("answerImage", Integer.class);
    public static final Property<Integer> AUTHOR = Property.create("author", Integer.class);
    public static final Property<Integer> DIFFICULTY = Property.create("difficulty", Integer.class);
    public static final Property<String> EXPLANATION = Property.create("explanation", String.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<String> RIGHT_ANSWER = Property.create("rightAnswer", String.class);
    public static final Property<Integer> SUBTHEME = Property.create("subtheme", Integer.class);
    public static final Property<Integer> TASK_IMAGE = Property.create("taskImage", Integer.class);
    public static final Property<String> TEXT = Property.create("text", String.class);
    public static final Property<Difficulty> DIFFICULTY1 = Property.create("difficulty1", Difficulty.class);
    public static final Property<Image> IMAGE = Property.create("image", Image.class);
    public static final Property<Image> IMAGE1 = Property.create("image1", Image.class);
    public static final Property<List<Solution>> SOLUTIONS = Property.create("solutions", List.class);
    public static final Property<Subtheme> SUBTHEME1 = Property.create("subtheme1", Subtheme.class);
    public static final Property<User> USER = Property.create("user", User.class);

    public void setAnswerImage(Integer answerImage) {
        writeProperty("answerImage", answerImage);
    }
    public Integer getAnswerImage() {
        return (Integer)readProperty("answerImage");
    }

    public void setAuthor(Integer author) {
        writeProperty("author", author);
    }
    public Integer getAuthor() {
        return (Integer)readProperty("author");
    }

    public void setDifficulty(Integer difficulty) {
        writeProperty("difficulty", difficulty);
    }
    public Integer getDifficulty() {
        return (Integer)readProperty("difficulty");
    }

    public void setExplanation(String explanation) {
        writeProperty("explanation", explanation);
    }
    public String getExplanation() {
        return (String)readProperty("explanation");
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setRightAnswer(String rightAnswer) {
        writeProperty("rightAnswer", rightAnswer);
    }
    public String getRightAnswer() {
        return (String)readProperty("rightAnswer");
    }

    public void setSubtheme(Integer subtheme) {
        writeProperty("subtheme", subtheme);
    }
    public Integer getSubtheme() {
        return (Integer)readProperty("subtheme");
    }

    public void setTaskImage(Integer taskImage) {
        writeProperty("taskImage", taskImage);
    }
    public Integer getTaskImage() {
        return (Integer)readProperty("taskImage");
    }

    public void setText(String text) {
        writeProperty("text", text);
    }
    public String getText() {
        return (String)readProperty("text");
    }

    public void setDifficulty1(Difficulty difficulty1) {
        setToOneTarget("difficulty1", difficulty1, true);
    }

    public Difficulty getDifficulty1() {
        return (Difficulty)readProperty("difficulty1");
    }


    public void setImage(Image image) {
        setToOneTarget("image", image, true);
    }

    public Image getImage() {
        return (Image)readProperty("image");
    }


    public void setImage1(Image image1) {
        setToOneTarget("image1", image1, true);
    }

    public Image getImage1() {
        return (Image)readProperty("image1");
    }


    public void addToSolutions(Solution obj) {
        addToManyTarget("solutions", obj, true);
    }
    public void removeFromSolutions(Solution obj) {
        removeToManyTarget("solutions", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Solution> getSolutions() {
        return (List<Solution>)readProperty("solutions");
    }


    public void setSubtheme1(Subtheme subtheme1) {
        setToOneTarget("subtheme1", subtheme1, true);
    }

    public Subtheme getSubtheme1() {
        return (Subtheme)readProperty("subtheme1");
    }


    public void setUser(User user) {
        setToOneTarget("user", user, true);
    }

    public User getUser() {
        return (User)readProperty("user");
    }


}
