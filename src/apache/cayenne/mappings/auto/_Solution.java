package apache.cayenne.mappings.auto;

import java.time.LocalDateTime;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import apache.cayenne.mappings.Task;
import apache.cayenne.mappings.User;

/**
 * Class _Solution was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Solution extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ACTUAL_ANSWER_PROPERTY = "actualAnswer";
    public static final String SOLUTION_DATE_TIME_PROPERTY = "solutionDateTime";
    public static final String USER_PROPERTY = "user";
    public static final String TASK_PROPERTY = "task";
    public static final String USER1_PROPERTY = "user1";

    public static final String SOLUTION_ID_PK_COLUMN = "solution_id";

    public static final Property<String> ACTUAL_ANSWER = Property.create("actualAnswer", String.class);
    public static final Property<LocalDateTime> SOLUTION_DATE_TIME = Property.create("solutionDateTime", LocalDateTime.class);
    public static final Property<Integer> USER = Property.create("user", Integer.class);
    public static final Property<Task> TASK = Property.create("task", Task.class);
    public static final Property<User> USER1 = Property.create("user1", User.class);

    public void setActualAnswer(String actualAnswer) {
        writeProperty("actualAnswer", actualAnswer);
    }
    public String getActualAnswer() {
        return (String)readProperty("actualAnswer");
    }

    public void setSolutionDateTime(LocalDateTime solutionDateTime) {
        writeProperty("solutionDateTime", solutionDateTime);
    }
    public LocalDateTime getSolutionDateTime() {
        return (LocalDateTime)readProperty("solutionDateTime");
    }

    public void setUser(Integer user) {
        writeProperty("user", user);
    }
    public Integer getUser() {
        return (Integer)readProperty("user");
    }

    public void setTask(Task task) {
        setToOneTarget("task", task, true);
    }

    public Task getTask() {
        return (Task)readProperty("task");
    }


    public void setUser1(User user1) {
        setToOneTarget("user1", user1, true);
    }

    public User getUser1() {
        return (User)readProperty("user1");
    }


}
